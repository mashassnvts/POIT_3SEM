Microsoft (R) Macro Assembler Version 14.37.32825.0	    11/25/23 14:09:54
asm3.asm						     Page 1 - 1


				.586
				.MODEL FLAT, STDCALL  

				includelib kernel32.lib 

				ExitProcess PROTO: DWORD 
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD 

				.STACK 4096  

 00000000			.CONST
 00000000			.DATA
 00000000 05 08 02 04 06	Arr BYTE 5, 8, 2, 4, 6, 9  ; Объявление массива байтов
	   09
 00000006 008A 003B 0044	myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h  ; Объявление массива слов
	   005F 0099
 = 00000000			MB_OK	EQU 0  

 00000010 D1 EE F1 ED EE	STR1	DB "Сосновец М.И. 2 курс 4 группа", 0 
	   E2 E5 F6 20 CC
	   2E C8 2E 20 32
	   20 EA F3 F0 F1
	   20 34 20 E3 F0
	   F3 EF EF E0 00
 0000002E CC E0 F1 F1 E8	STR2	DB "Массив содержит нулевой элемент", 0 
	   E2 20 F1 EE E4
	   E5 F0 E6 E8 F2
	   20 ED F3 EB E5
	   E2 EE E9 20 FD
	   EB E5 EC E5 ED
	   F2 00
 0000004E CC E0 F1 F1 E8	STR3	DB "Массив не содержит нулевой элемент", 0 
	   E2 20 ED E5 20
	   F1 EE E4 E5 F0
	   E6 E8 F2 20 ED
	   F3 EB E5 E2 EE
	   E9 20 FD EB E5
	   EC E5 ED F2 00
 00000071 00000000		HW		DD ?  

 00000000			.CODE

 00000000			main PROC
 00000000			START:
 00000000  BE 00000006 R		mov ESI, OFFSET myWords  ; Загрузка адреса массива слов в регистр ESI.
 00000005  66| 8B 46 04			mov AX, [ESI + 4] ;44h  ; Загрузка значения четвертого элемента массива слов в регистр AX.
 00000009  66| 8B 5E 02			mov BX, [ESI + 2] ;3Bh  ; Загрузка значения второго элемента массива слов в регистр BX.

 0000000D  33 C0			xor EAX, EAX  ; Обнуление регистра EAX.
 0000000F  33 DB			xor EBX, EBX  ; Обнуление регистра EBX.

 00000011  02 05 00000000 R		add AL, [Arr] ; Добавление значения первого элемента массива байтов к младшему байту регистра AL. 
 00000017  02 05 00000001 R		add AL, [Arr + 1] 
 0000001D  02 05 00000002 R		add AL, [Arr + 2]  
 00000023  02 05 00000003 R		add AL, [Arr + 3]  
 00000029  02 05 00000004 R		add AL, [Arr + 4]  
 0000002F  02 05 00000005 R		add AL, [Arr + 5]  
 00000035  02 05 00000006 R		add AL, [Arr + 6] 

 0000003B  33 C0			xor EAX, EAX  ; Обнуление регистра EAX.
 0000003D  B9 00000006			mov ECX, LENGTHOF Arr  ; Загрузка длины массива байтов в регистр ECX.
 00000042  BB 00000001			mov EBX, 1  ; Установка значения EBX в 1.

 00000047			CYCLE:
 00000047  80 B8 00000000 R		cmp [Arr + EAX], 0  ; Сравнение значения элемента массива байтов с 0.
	   00
 0000004E  74 02			je TRUE  ; Если равно 0, переход к метке TRUE.
 00000050  75 1E			jne FALSE  ; Если не равно 0, переход к метке FALSE.

 00000052			TRUE:
 00000052  BB 00000000			mov EBX, 0  ; Установка значения EBX в 0.
					invoke MessageBoxA, HW, OFFSET STR2, OFFSET STR1, MB_OK 
 0000006E  EB 05			jmp ENDOFCYCLE  ; Переход к метке ENDOFCYCLE.

 00000070			FALSE:
 00000070  83 C0 01			add EAX, 1  ; Увеличение значения регистра EAX на 1.
 00000073  E2 D2			loop CYCLE  ; Повторение цикла, пока значение регистра ECX не станет равным 0.

 00000075			ENDOFCYCLE:

 00000075  83 FB 01			cmp EBX, 1  ; Сравнение значения EBX с 1.
 00000078  74 02			je CHECKF  ; Если равно 1, переход к метке CHECKF.
 0000007A  75 17			jne CHECKT  ; Если не равно 1, переход к метке CHECKT.

 0000007C			CHECKF:
					invoke MessageBoxA, HW, OFFSET STR3, OFFSET STR1, MB_OK  

 00000093			CHECKT:

 00000093  6A 00			push 0  
 00000095  E8 00000000 E		CALL ExitProcess 

 0000009A			main ENDP 
				end main  
Microsoft (R) Macro Assembler Version 14.37.32825.0	    11/25/23 14:09:54
asm3.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000075 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000009A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000009A Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000047 _TEXT	
  TRUE . . . . . . . . . . . . .	L Near	 00000052 _TEXT	
  FALSE  . . . . . . . . . . . .	L Near	 00000070 _TEXT	
  ENDOFCYCLE . . . . . . . . . .	L Near	 00000075 _TEXT	
  CHECKF . . . . . . . . . . . .	L Near	 0000007C _TEXT	
  CHECKT . . . . . . . . . . . .	L Near	 00000093 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Arr  . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
HW . . . . . . . . . . . . . . .	DWord	 00000071 _DATA	
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
STR1 . . . . . . . . . . . . . .	Byte	 00000010 _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 0000002E _DATA	
STR3 . . . . . . . . . . . . . .	Byte	 0000004E _DATA	
myWords  . . . . . . . . . . . .	Word	 00000006 _DATA	

	   0 Warnings
	   0 Errors
